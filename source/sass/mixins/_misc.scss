///
/// Add shadow
/// Get from materialize.css
///
@mixin z-depth($depth: 1) {
  @if ($depth == 1) {
    box-shadow: rgba(0, 0, 0, 0.117647) 0 1px 6px, rgba(0, 0, 0, 0.117647) 0 1px 4px;
  } @else if ($depth == 2) {
    box-shadow: rgba(0, 0, 0, 0.156863) 0 3px 10px, rgba(0, 0, 0, 0.227451) 0 3px 10px;
  } @else if ($depth == 3) {
    box-shadow: rgba(0, 0, 0, 0.188235) 0 10px 30px, rgba(0, 0, 0, 0.227451) 0 6px 10px;
  } @else if ($depth == 4) {
    box-shadow: rgba(0, 0, 0, 0.247059) 0 14px 45px, rgba(0, 0, 0, 0.219608) 0 10px 18px;
  } @else if ($depth == 5) {
    box-shadow: rgba(0, 0, 0, 0.298039) 0 19px 60px, rgba(0, 0, 0, 0.219608) 0 15px 20px;
  } @else {
    @warn 'Invalid param: $depth (allow in 1..5)';
  }
}

@mixin outline($color: #d50000, $thickness: 2px) {
  @if ($DEV_MODE) {
    @if type_of($color) != color {
      $thickness: $color;
      $color: #d50000;
    }
    [data-invert=on] & {
      outline: $thickness dotted $color;
      outline-offset: -$thickness;
    }
  }
}

@mixin outline-children($color: #d50000, $thickness: 2px) {
  &, * { @include outline($color, $thickness); }
}

@mixin debug-rhythm-grid($color: #4affff, $alpha: 0.4) {
  @if ($DEV_MODE) {
    .dev-mode & {
      @include debug-vertical-alignment(rgba($color, $alpha));
    }
  }
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str_index($string, $search);

  @if $index {
    @return str_slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin webkit-scrollbar($color, $background: transparent, $size: 3px) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }
  &::-webkit-scrollbar-button {
    display: none;
    //background: none;
    //size: $size;
    //height: $size;
  }
  &::-webkit-scrollbar-corner {
    background: transparent;
  }
  &::-webkit-scrollbar-track {
    background-color: $background;
  }
  &::-webkit-scrollbar-thumb {
    background-color: $color;
    &:hover { background-color: $color; }
  }
  &::-webkit-resizer {
    display: none;
    //background: none;
    //size: $size;
    //height: $size;
  }
}

@mixin clearfix() {
  &::before, &::after { content: ''; display: table; }
  &::after { clear: both; }
}

@mixin absolute-stretch() {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  position: absolute;
}

@mixin link-color($color: $cLinkDefault, $hoverColor: $cLinkDefaultHover) {
  color: $color;
  text-decoration-color: rgba($color, 0.5);

  &:hover {
    color: $hoverColor;
    //text-decoration-color: transparent;
    text-decoration-color: rgba($hoverColor, 0.5);
  }
}

@mixin make-color-helper($class, $color) {
  .#{$class} {
    color: $color;
    @at-root {
      a.#{$class} { @include link-color($color); }
    }
  }
}
